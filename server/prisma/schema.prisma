generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  author       String
  img          String?
  price        Int?
  discountRate Int?
  rating       Int?
  quantity     Int
  seller       User?      @relation(fields: [sellerId], references: [id])
  sellerId     String?    @db.ObjectId
  cartItem     CartItem[]
  comments     Comment[]
  genres       String[]
  coupons      Int[]
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  img          String?
  password     String
  email        String?
  phone        String?
  role         String[]
  refreshToken String?
  cart         Cart?
  Product      Product[]
  Order        Order[]
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  cartItems CartItem[]
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique @db.ObjectId
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  cart      Cart?   @relation(fields: [cartId], references: [id])
  cartId    String? @db.ObjectId
  productId String  @db.ObjectId
  isOrdered Boolean @default(false)
  Order     Order?
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  msg       String
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

model Order {
  id                 String           @id @default(auto()) @map("_id") @db.ObjectId
  note               String
  location           String
  deliveryLog        deliveryStatus[]
  cartItem           CartItem         @relation(fields: [cartItemId], references: [id])
  cartItemId         String           @unique @db.ObjectId
  appliedCouponValue Int
  purchaser          User             @relation(fields: [purchaserId], references: [id])
  purchaserId        String           @db.ObjectId
}

type deliveryStatus {
  date        DateTime
  state       String
  description String
}
